<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:task="http://www.springframework.org/schema/task"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.2.xsd
		http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd
		http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache-4.3.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
		http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-4.3.xsd">
   
   <!-- 放行静态资源-->  
   <security:http pattern="/static/css/**" security="none"></security:http>
   <security:http pattern="/static/echarts/**" security="none"></security:http>
   <security:http pattern="/static/images/**" security="none"></security:http>
   <security:http pattern="/static/js/**" security="none"></security:http>
   <security:http pattern="/static/json/**" security="none"></security:http>
   <security:http pattern="/static/layui/**" security="none"></security:http>
   <security:http pattern="/static/layui_ext/**" security="none"></security:http>
   <security:http pattern="/static/page/**" security="none"></security:http>
   
   
   <!-- 配置springSecurity 
   auto-config="true"  表示自动加载springSecurity的配置文件
   use-expressions="true" 表示使用spring的el表达式来配置springSecrity
   -->
   <security:http auto-config="true" use-expressions="true">
   <!-- 放行login.jsp 和 验证码地址-->
   <security:intercept-url pattern="/code/vcode" access="permitAll()"/>
   <security:intercept-url pattern="/index.jsp" access="permitAll()"/>
      <security:intercept-url pattern="/failer.jsp" access="permitAll()"/>
   
   <!-- 开启iframe引用 -->
    <security:headers>
        <security:frame-options disabled="true"/>
    </security:headers>
   
     <!-- 进行资源的拦截 
       pattern="/**"  拦截所有资源 第一个 * 表示路径 第二个 * 表示拦截路径下的所有资源
       access="" 能够访问资源的角色  hasAnyRole()这个是el表达式
     -->
     <security:intercept-url pattern="/**" access="hasAnyRole('ROLE_SUPER','ROLE_SYS','ROLE_BUSINESS','ROLE_DATA')"/>
     
     <!-- 配置认证页面 -->
     <security:form-login login-page="/index.jsp"
                          login-processing-url="/login"
                          default-target-url="/view/system/main/index.jsp"
                          authentication-failure-url="/index.jsp"
                          username-parameter="logname"
                          password-parameter="pwd"
                          authentication-failure-forward-url="/failer.jsp"
                          always-use-default-target="true"
     ></security:form-login>
  
     <!-- 配置退出的地址 -->
     <security:logout logout-url="/logout"
                      logout-success-url="/view/system/main/login.jsp"
     />
     
     <!-- 去掉csrf拦截过滤器 不然登录会被拦截403  -->
     <security:csrf disabled="true"/>
   
   </security:http>
   
   
   <!-- 进行用户的角色认证 -->
   <security:authentication-manager>
     <security:authentication-provider user-service-ref="sysUsersServiceImpl">
       <security:password-encoder ref="passwordEncoder"></security:password-encoder>
     </security:authentication-provider>
   </security:authentication-manager>
   
   <!-- 加密对象放入到ioc容器 用于密码加密-->
   <bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"></bean>
   
</beans>

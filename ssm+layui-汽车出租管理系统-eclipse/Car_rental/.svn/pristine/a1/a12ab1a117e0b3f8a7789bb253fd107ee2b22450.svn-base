package com.chengyong.sys.controller;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.websocket.server.PathParam;

import org.apache.ibatis.annotations.Param;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.validation.BindingResult;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import com.chengyong.sys.entity.SysUsers;
import com.chengyong.sys.service.SysUsersService;
import com.chengyong.sys.util.CUD_CallbackInfo;
import com.chengyong.sys.util.DataView;
import com.chengyong.sys.util.SysUsersVo;

@Controller
@RequestMapping("login/")
public class SysUsersController {
   @Autowired
   private SysUsersService sysUsersService;
   
   /**
    * 用户登录
    * @param sysUsers
    * @param request
    * @return
    */
   @RequestMapping(value = "userLogin",method = RequestMethod.POST)
   public String userLogin(SysUsers sysUsers,HttpServletRequest request) {
	   try {
		   SysUsers user = sysUsersService.LoginUser(sysUsers);
		   request.setAttribute("userName", user.getRealname());
		   if(user!=null) {
			   return "system/main/index";
		   }else {
			   request.setAttribute("msg", "请检查密码后重新登录！");
			   return "system/main/login";
		   }
	   }catch(Exception e) {
		   e.printStackTrace();
		       return "system/main/login";
	   }
	   
   }
   
   /**
    * 所有用户的显示
    * @param sysUsers
    * @return
    */
   @RequestMapping("userList")
   @ResponseBody
   public DataView userList(SysUsers sysUsers) {
	   try {
		   DataView list = sysUsersService.selectByPrimaryKey(sysUsers);
		   return list;
	   }catch(Exception e) {
		   e.printStackTrace();
		   return null;
	   }
	   
   }
   
   /**
    * 用户的信息查询
    */
   @RequestMapping("userQuery")
   @ResponseBody
   public DataView userQuery(SysUsers sysUsers) {
	   try {
		   DataView list = sysUsersService.selectByPrimaryKey(sysUsers);
		   return list;
	   }catch(Exception e) {
		   e.printStackTrace();
		   return null;
	   }
	   
   }
   
   /**
    * 用户的添加
    * @return
    */
   @RequestMapping(value = "userAdd",method = RequestMethod.POST)
   @ResponseBody
   public Map<String,String> userAdd(SysUsers sysUsers) {
	   Map<String,String> map = new HashMap<String,String>();
	   try {
		   sysUsersService.insert(sysUsers);
		   map.put("msg", CUD_CallbackInfo.SUCCESS_ADDCallback);
		   return map;
	   }catch(Exception e) {
		   e.printStackTrace();
		   map.put("msg", CUD_CallbackInfo.FAILURE_ADDCallback);
		   return map;
	   }
   }
   
   /**
    * 用户的修改
    * @param sysUsers
    * @return
    */
   @RequestMapping(value = "userUpdate",method = RequestMethod.POST)
   @ResponseBody
   public Map<String,String> userUpdate(SysUsers sysUsers) {
	   Map<String,String> map = new HashMap<String,String>();
	   try {
		   sysUsersService.updateByPrimaryKey(sysUsers);
		   map.put("msg", CUD_CallbackInfo.SUCCESS_UPDATECallback);
		   return map;
	   }catch(Exception e) {
		   e.printStackTrace();
		   map.put("msg", CUD_CallbackInfo.FAILURE_UPDATECallback);
		   return map;
	   }
   }
   
   /**
    * 用户的删除
    * @param sysUsers
    * @return
    */
   @RequestMapping(value = "userDelete",method = RequestMethod.POST)
   @ResponseBody
   public Map<String,String> userDelete(@PathParam("userid") Short userid) {
	   Map<String,String> map = new HashMap<String,String>();
	   try {
		   sysUsersService.deleteByPrimaryKey(userid);
		   map.put("msg", CUD_CallbackInfo.SUCCESS_DELETECallback);
		   return map;
	   }catch(Exception e) {
		   e.printStackTrace();
		   map.put("msg", CUD_CallbackInfo.FAILURE_DELETECallback);
		   return map;
	   }
   }
   
   /**
    * 用户的批量
    * @param sysUsers
    * @return
    */
   @RequestMapping(value = "userDeleteLot",method = RequestMethod.POST)
   @ResponseBody
   public Map<String,String> userDeleteLot(@PathParam("ids") SysUsersVo sysUsersVo) {
	   Map<String,String> map = new HashMap<String,String>();
	   try {
		   sysUsersService.deleteByPrimaryKeyLot(sysUsersVo);
		   map.put("msg", CUD_CallbackInfo.SUCCESS_DELETECallback);
		   return map;
	   }catch(Exception e) {
		   e.printStackTrace();
		   map.put("msg", CUD_CallbackInfo.FAILURE_DELETECallback);
		   return map;
	   }
   }
   
   /**
    * 用户的重置密码
    * @param sysUsers
    * @return
    */
   @RequestMapping(value = "userReset",method = RequestMethod.POST)
   @ResponseBody
   public Map<String,String> userReset(@Param("userid") Short userid) {
	   Map<String,String> map = new HashMap<String,String>();
	   try {
		   sysUsersService.uesrReset(userid);
		   map.put("msg", CUD_CallbackInfo.SUCCESS_RESETCallback);
		   return map;
	   }catch(Exception e) {
		   e.printStackTrace();
		   map.put("msg", CUD_CallbackInfo.FAILURE_RESETCallback);
		   return map;
	   }
   }
   
}
